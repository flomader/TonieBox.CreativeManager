@page "/browse"

@inject MediaService MediaService 

@inject CreativeTonieService CreativeTonieService

@inject IHttpContextAccessor HttpContext 

@if (backPath != null)
{
    <a class="back mb-3" href="@backPath">Zurück</a>
}

<Grid Items="items" RestrictWidth="true"></Grid>

@code {

    IEnumerable<GridItem> items;

    string backPath;

    protected override async Task OnInitializedAsync()
    {
        var path = HttpContext.HttpContext.Request.Query["path"].ToString();
            
        var mediaItems = await MediaService.GetItems(path);
        var tonies = await CreativeTonieService.GetTonies();

        backPath = string.IsNullOrEmpty(path)
            ? null
            : $"/browse?path={path.GetParentPath().EncodeUrl()}";

        items = mediaItems
            .Select(dir => new GridItem
            {
                Name = dir.Name,
                Url = $"/{(dir.HasSubitems ? "browse" : "upload/selecttonie")}?path={dir.Path.EncodeUrl()}",
                CoverUrl = $"/cover?path={dir.Path.EncodeUrl()}",
                SubCoverUrl = dir.HasSubitems
                    ? $"/cover?path=folder"
                    : dir.MappedTonieId != null
                        ? tonies.FirstOrDefault(t => dir.MappedTonieId == t.Id)?.ImageUrl
                        : null,
                SubCoverClass = dir.MappedTonieId != null ? "tonie" : null
            })
            .ToArray();
    }

}