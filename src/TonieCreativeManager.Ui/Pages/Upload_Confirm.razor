@page "/upload/confirm/{tonieid}"

@inject CreativeTonieService CreativeTonieService

@inject Settings Settings

@inject IHttpContextAccessor Accessor

@if (tonie != null)
{
    <Header BackUrl="javascript:history.back()"></Header>

    <div class="centered mt-5">

        <div style="display:flex; align-items:center;">
            <Item ImageUrl="@mediaItemUrl" Style="width:35vw" />

            <i class="fas fa-arrow-right fa-4x m-2"></i>

            <Item ImageUrl="@tonie.ImageUrl" SubImageUrl="@tonieMediaUrl" Style="width:35vw" />
        </div>
        
        <div class="mt-5">
            <Button Href="@startUploadUrl" Style="font-size:2rem;">
                <span>
                    <i class="fas fa-coins"></i>
                    @Settings.MediaItemUploadCost
                    <i class="fas fa-check-circle ml-3"></i>
                </span>
            </Button>
        </div>

    </div>
}

@code {

    [Parameter] public string TonieId { get; set; }

    Tonie tonie;

    string mediaItemUrl;

    string path;

    string startUploadUrl;

    string tonieMediaUrl;


    protected override async Task OnInitializedAsync()
    {
        var ctx = Accessor.HttpContext;
        path = ctx.Request.Query["path"];

        tonie = await CreativeTonieService.GetTonie(TonieId);

        mediaItemUrl = $"/cover?path={path.EncodeUrl()}";

        startUploadUrl = $"upload/start/{TonieId}?path={path.EncodeUrl()}";

        tonieMediaUrl = string.IsNullOrEmpty(tonie.CurrentMediaPath)
            ? null
            : $"/cover?path={tonie.CurrentMediaPath.EncodeUrl()}";
    }

}