@page "/upload"

@inject SessionService Session

@inject UserService UserService 

@inject IHttpContextAccessor Accessor

<Header BackUrl="@backPath"></Header>

<Grid Items="items" RestrictItemWidth="true"></Grid>

@code {

    IEnumerable<GridItem> items;

    string backPath;

    protected override async Task OnInitializedAsync()
    {
        var path = Accessor.HttpContext.Request.Query["path"].ToString();
        var mediaItems = await UserService.GetUploadableItems(path, Session.UserId);
        var canUpload = await UserService.CanUploadItem(Session.UserId);

        backPath = string.IsNullOrEmpty(path)
            ? null
            : "javascript:history.back()";

        items = mediaItems
            .Select(item =>
            {
                var pathEncoded = item.Path.EncodeUrl();

                return new GridItem
                {
                    Name = item.Name,
                    Url = canUpload
                        ? item.Childs.Any()
                            ? $"/upload?path={pathEncoded}"
                            : $"/upload/selecttonie?path={pathEncoded}"
                        : null,
                    ImageUrl = $"/cover?path={pathEncoded}",
                    SubImageUrl = item.Childs.Any()
                         ? $"/cover?path=folder"
                         : null,
                    Restricted = !canUpload
                };
            })
            .ToArray();
    }

}